---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: lumberjack
  namespace: lumberjack
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRole
metadata:
  name: lumberjack-read
rules:
- apiGroups: [""]
  resources:
  - namespaces
  - pods
  verbs: ["get", "list", "watch"]
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRoleBinding
metadata:
  name: lumberjack-read
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: lumberjack-read
subjects:
- kind: ServiceAccount
  name: lumberjack
  namespace: lumberjack
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: lumberjack-dispatcher
  namespace: lumberjack
spec:
  selector:
    matchLabels:
      app: lumberjack-dispatcher
  updateStrategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: lumberjack-dispatcher
    spec:
      containers:
      - name: lumberjack-dispatcher
        image: lumberjack-dispatcher
        imagePullPolicy: IfNotPresent
        command:
          - python3
        args:
          - -u
          - dispatcher.py
          - --kubernetes
        volumeMounts:
        - name: varlibdockercontainers
          mountPath: /var/lib/docker/containers
          # readOnly: true  # We leave a sqlite3 file on all servers.
      terminationGracePeriodSeconds: 10
      volumes:
      - name: varlibdockercontainers
        hostPath:
          path: /var/lib/docker/containers
      serviceAccountName: lumberjack
